{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Grayson\\\\Full stack Project\\\\Client\\\\src\\\\components\\\\courses.jsx\";\nimport React, { Component } from \"react\";\nimport Course from \"./course\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { fetchCourses } from \"../actions/courseActions\";\nimport store from \"../store\";\n\nclass Courses extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      courseDisplayed: true\n    };\n  }\n\n  toggleCourseDisplayed() {\n    const toggle = !this.state.coursesDisplayed;\n    this.setState({\n      coursesDisplayed: toggle\n    });\n  }\n\n  componentWillMount() {\n    fetchCourses();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.toggleCourseDisplayed,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }\n    }, this.state.coursesDisplayed ? \"Stop Displaying Courses\" : \"Display Courses\"), this.state.coursesDisplayed ? \"courseItems\" : null);\n  }\n\n}\n\nconst mapStateToProps = state => state.courses;\n\nexport default connect(mapStateToProps)(Courses); //const courseItems = this.props.courses.map((courses) => (\n//<Course key={courses.id} title={courses.title} body={courses.body} />\n//));","map":{"version":3,"sources":["C:/Users/Grayson/Full stack Project/Client/src/components/courses.jsx"],"names":["React","Component","Course","createStore","applyMiddleware","connect","fetchCourses","store","Courses","constructor","props","state","courseDisplayed","toggleCourseDisplayed","toggle","coursesDisplayed","setState","componentWillMount","render","mapStateToProps","courses"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,0BAA7B;AACA,OAAOC,KAAP,MAAkB,UAAlB;;AAEA,MAAMC,OAAN,SAAsBP,SAAtB,CAAgC;AAC9BQ,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,eAAe,EAAE;AADN,KAAb;AAGD;;AAEDC,EAAAA,qBAAqB,GAAG;AACtB,UAAMC,MAAM,GAAG,CAAC,KAAKH,KAAL,CAAWI,gBAA3B;AACA,SAAKC,QAAL,CAAc;AAAED,MAAAA,gBAAgB,EAAED;AAApB,KAAd;AACD;;AACDG,EAAAA,kBAAkB,GAAG;AACnBX,IAAAA,YAAY;AACb;;AACDY,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAQ,MAAA,OAAO,EAAE,KAAKL,qBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKF,KAAL,CAAWI,gBAAX,GACG,yBADH,GAEG,iBAHN,CADF,EAMG,KAAKJ,KAAL,CAAWI,gBAAX,GAA8B,aAA9B,GAA8C,IANjD,CADF;AAUD;;AA1B6B;;AA6BhC,MAAMI,eAAe,GAAIR,KAAD,IAAWA,KAAK,CAACS,OAAzC;;AAEA,eAAef,OAAO,CAACc,eAAD,CAAP,CAAyBX,OAAzB,CAAf,C,CACA;AACA;AACA","sourcesContent":["import React, { Component } from \"react\";\nimport Course from \"./course\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { fetchCourses } from \"../actions/courseActions\";\nimport store from \"../store\";\n\nclass Courses extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      courseDisplayed: true,\n    };\n  }\n\n  toggleCourseDisplayed() {\n    const toggle = !this.state.coursesDisplayed;\n    this.setState({ coursesDisplayed: toggle });\n  }\n  componentWillMount() {\n    fetchCourses();\n  }\n  render() {\n    return (\n      <div>\n        <button onClick={this.toggleCourseDisplayed}>\n          {this.state.coursesDisplayed\n            ? \"Stop Displaying Courses\"\n            : \"Display Courses\"}\n        </button>\n        {this.state.coursesDisplayed ? \"courseItems\" : null}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => state.courses;\n\nexport default connect(mapStateToProps)(Courses);\n//const courseItems = this.props.courses.map((courses) => (\n//<Course key={courses.id} title={courses.title} body={courses.body} />\n//));\n"]},"metadata":{},"sourceType":"module"}